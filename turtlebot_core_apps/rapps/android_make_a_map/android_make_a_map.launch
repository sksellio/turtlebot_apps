<!--
  Right now, the android app is hard coded to look for /cmd_vel as the input
  topic.
 -->
<launch>
  <!-- *********************** Teleoperation ********************** -->

  <param name="camera/rgb/image_color/compressed/jpeg_quality" value="22"/>

  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
    <arg name="rgb_processing" value="true" />
    <arg name="depth_registration" value="false" />
    <arg name="depth_processing" value="false" />
  </include>

  <!-- Make a slower camera feed available. -->
  <node pkg="topic_tools" type="throttle" name="camera_throttle" output="screen"
        args="messages camera/rgb/image_color/compressed 5"/>

  <node pkg="nodelet" type="nodelet" name="teleop_velocity_smoother" args="load yocs_velocity_smoother/VelocitySmootherNodelet mobile_base_nodelet_manager">
    <rosparam file="$(find turtlebot_bringup)/param/defaults/smoother.yaml" command="load"/>
    <remap from="teleop_velocity_smoother/raw_cmd_vel" to="cmd_vel"/>
    <remap from="teleop_velocity_smoother/odometry" to="odom"/> <!-- Todo : moved to odom_combined -->
    <remap from="teleop_velocity_smoother/smooth_cmd_vel" to="cmd_vel_mux/input/teleop"/>
  </node>


  <!-- *********************** Optimisation *********************** -->

  <node pkg="tf" type="tf_change_notifier" name="tf_throttle_for_android_gui" output="screen">
    <param name="polling_frequency" value="5"/>
    <param name="translational_update_distance" value="-1"/>
    <param name="angular_update_distance" value="-1"/>
    <rosparam param="frame_pairs">
      - {source_frame: base_footprint, target_frame: map}
      - {source_frame: camera_depth_frame, target_frame: map}
    </rosparam>
  </node>


  <!-- *************************** Navi *************************** -->

  <include file="$(find turtlebot_navigation)/launch/includes/_move_base.launch"/>
  <include file="$(find turtlebot_navigation)/launch/includes/_gmapping.launch" />


  <!-- *************************** Maps *************************** -->

  <node name="mongo" type="mongo_wrapper_ros.py" pkg="warehouse_ros" output="log">
    <param name="database_path" value="warehouse_data"/>
    <param name="overwrite" value="false"/>
  </node>
  <node pkg="map_store" type="map_saver" name="map_saver" output="screen"/>

</launch>

